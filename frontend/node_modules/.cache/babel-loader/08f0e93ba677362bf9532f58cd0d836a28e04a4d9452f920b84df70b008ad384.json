{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgohry Store\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../style.css'; // Import CSS styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post,\n  fetchPosts\n}) => {\n  _s();\n  const [isLiking, setIsLiking] = useState(false); // State to handle like button disabling\n  const [comment, setComment] = useState(''); // State to handle comment input\n  const [error, setError] = useState(''); // State for error handling\n\n  const handleLike = async () => {\n    setIsLiking(true); // Disable the like button while the request is being made\n    try {\n      await axios.post(`http://localhost:5000/api/posts/${post._id}/like`, {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Post liked');\n      fetchPosts(); // Refresh the post list after liking\n    } catch (error) {\n      console.error('Error liking post:', error);\n    } finally {\n      setIsLiking(false); // Re-enable the like button\n    }\n  };\n  const handleComment = async () => {\n    if (!comment.trim()) return; // Prevent submitting empty comments\n    try {\n      await axios.post(`http://localhost:5000/api/posts/${post._id}/comment`, {\n        content: comment\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Comment added');\n      fetchPosts(); // Refresh the post list after adding a comment\n      setComment(''); // Clear the comment input after submission\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      setError('Failed to add comment. Please try again.'); // Set error state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.image,\n      alt: \"Post\",\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLike,\n      disabled: isLiking,\n      className: \"like-button\",\n      children: isLiking ? 'Liking...' : 'Like'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [post.likes.length, \" Likes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            handleComment(); // Call the function to submit comment\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleComment,\n        className: \"comment-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: comment.content\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) // Ensure each comment has a unique key\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [post.comments.length, \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"+Ssorkr39YeMO5Lvsl0poA1PZm4=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Post","post","fetchPosts","_s","isLiking","setIsLiking","comment","setComment","error","setError","handleLike","_id","headers","localStorage","getItem","console","log","handleComment","trim","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","image","src","alt","onClick","disabled","likes","length","type","placeholder","value","onChange","e","target","onKeyDown","key","comments","map","_c","$RefreshReg$"],"sources":["C:/Users/Elgohry Store/social-media-app/frontend/src/components/Post.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../style.css'; // Import CSS styles\r\n\r\nconst Post = ({ post, fetchPosts }) => {\r\n    const [isLiking, setIsLiking] = useState(false);  // State to handle like button disabling\r\n    const [comment, setComment] = useState('');       // State to handle comment input\r\n    const [error, setError] = useState('');           // State for error handling\r\n\r\n    const handleLike = async () => {\r\n        setIsLiking(true);  // Disable the like button while the request is being made\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/posts/${post._id}/like`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            console.log('Post liked');\r\n            fetchPosts(); // Refresh the post list after liking\r\n        } catch (error) {\r\n            console.error('Error liking post:', error);\r\n        } finally {\r\n            setIsLiking(false);  // Re-enable the like button\r\n        }\r\n    };\r\n\r\n    const handleComment = async () => {\r\n        if (!comment.trim()) return; // Prevent submitting empty comments\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/posts/${post._id}/comment`, { content: comment }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            console.log('Comment added');\r\n            fetchPosts();  // Refresh the post list after adding a comment\r\n            setComment(''); // Clear the comment input after submission\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n            setError('Failed to add comment. Please try again.'); // Set error state\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-container\">\r\n            <h3>{post.content}</h3>\r\n            {post.image && <img src={post.image} alt=\"Post\" className=\"post-image\" />} {/* Post image */}\r\n            \r\n            <button onClick={handleLike} disabled={isLiking} className=\"like-button\">\r\n                {isLiking ? 'Liking...' : 'Like'}\r\n            </button>\r\n            <span>{post.likes.length} Likes</span> {/* Display number of likes */}\r\n\r\n            {/* Comment input */}\r\n            <div className=\"comment-section\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a comment...\" \r\n                    value={comment} \r\n                    onChange={(e) => setComment(e.target.value)} \r\n                    onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            handleComment(); // Call the function to submit comment\r\n                        }\r\n                    }} \r\n                />\r\n                <button onClick={handleComment} className=\"comment-button\">Submit</button>\r\n            </div>\r\n\r\n            {/* Error message */}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* Display comments */}\r\n            <div className=\"comments-list\">\r\n                {post.comments.map(comment => (\r\n                    <div key={comment._id} className=\"comment\">\r\n                        {comment.content}\r\n                    </div>  // Ensure each comment has a unique key\r\n                ))}\r\n            </div>\r\n            <span>{post.comments.length} Comments</span> {/* Display number of comments */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}