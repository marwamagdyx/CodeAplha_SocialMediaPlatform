{"ast":null,"code":"\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import '../style.css'; // Import custom CSS styles\n// // import avatar from '../assets/user-circle.svg';\n// // import like from '../assets/like.png';\n// // import commentbtn from '../assets/chat.png';\n\n// // const Post = ({ post, fetchPosts }) => {\n// //     const [comment, setComment] = useState(''); // State for comment input\n// //     const [showComments, setShowComments] = useState(false); // State to toggle comment visibility\n\n// //     const handleLike = async () => {\n// //         try {\n// //             await axios.post(`http://localhost:5000/api/posts/${post._id}/like`, {}, {\n// //                 headers: {\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n// //                 }\n// //             });\n// //             console.log('Post liked');\n// //          // Refresh the post list after liking\n// //         } catch (error) {\n// //             console.error('Error liking post:', error);\n// //         }\n// //     };\n\n// //     const handleComment = async (e) => {\n// //         e.preventDefault(); // Prevent form submission\n// //         if (!comment.trim()) return; // Prevent submitting empty comments\n// //         try {\n// //             await axios.post(`http://localhost:5000/api/posts/${post._id}/comment`, { content: comment }, {\n// //                 headers: {\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n// //                 }\n// //             });\n// //             console.log('Comment added');\n// //            // Refresh the post list after adding a comment\n// //             setComment(''); // Clear the comment input after submission\n// //         } catch (error) {\n// //             console.error('Error adding comment:', error);\n// //         }\n// //     };\n\n// //     return (\n// //         <div className=\"card mb-3 shadow-none border\">\n// //             <div className=\"card-body border-bottom\">\n// //                 {/* Post Header with Avatar, Dynamic User Name, and Time */}\n// //                 <div className=\"d-flex align-items-center gap-3\">\n// //                     <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"40\" height=\"40\" />\n// //                     {/* Display the post author's name dynamically */}\n// //                     <h6 className=\"fw-semibold mb-0 fs-4\">{post.user.username}</h6> \n// //                 </div>\n\n// //                 {/* Post Content */}\n// //                 <p className=\"text-dark my-3\">{post.content}</p>\n// //                 {post.image && (\n// //                     <img src={post.image} alt=\"Post\" className=\"img-fluid rounded-4 w-100 object-fit-cover\" style={{ height: '360px' }} />\n// //                 )}\n\n// //                 {/* Post Actions (Like, Comment, Share) */}\n// //                 <div className=\"d-flex align-items-center my-3\">\n// //                     <div className=\"d-flex align-items-center gap-2\">\n// //                         <a className=\"like-btn text-white d-flex align-items-center justify-content-center bg-primary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={handleLike}>\n// //                             <i className=\"fa fa-thumbs-up\">\n// //                                 <img src={like} alt=\"like\" className=\"img-fluid icon-small\" />\n// //                             </i>\n// //                         </a>\n// //                         <span className=\"text-dark fw-semibold\">{post.likes.length}</span>\n// //                     </div>\n// //                     <div className=\"d-flex align-items-center gap-2 ms-4\">\n// //                         <a className=\"comment-btn text-white d-flex align-items-center justify-content-center bg-secondary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={() => setShowComments(!showComments)}>\n// //                             <i className=\"fa fa-comments\">\n// //                                 <img src={commentbtn} alt=\"comment\" className=\"img-fluid icon-small\" />\n// //                             </i>\n// //                         </a>\n// //                         <span className=\"text-dark fw-semibold\">{post.comments.length}</span>\n// //                     </div>\n// //                 </div>\n\n// //                 {/* Comments Section: Toggle Visibility Based on `showComments` */}\n// //                 {showComments && (\n// //                     <div className=\"position-relative\">\n// //                         {post.comments.map((comment) => (\n// //                             <div key={comment._id} className=\"p-4 rounded-2 bg-light mb-3\">\n// //                                 <div className=\"d-flex align-items-center gap-3\">\n// //                                     <img src={avatar} alt=\"comment avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\n// //                                     {/* Display the comment author dynamically */}\n// //                                     <h6 className=\"fw-semibold mb-0 fs-4\">{comment.user.username}</h6>\n// //                                 </div>\n// //                                 {/* Display the comment content */}\n// //                                 <p className=\"my-3\">{comment.content}</p>\n// //                             </div>\n// //                         ))}\n\n// //                         {/* Comment Input */}\n// //                         <div className=\"d-flex align-items-center gap-3 p-3\">\n// //                             <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\n// //                             <input\n// //                                 type=\"text\"\n// //                                 className=\"form-control py-2\"\n// //                                 placeholder=\"Comment\"\n// //                                 value={comment}\n// //                                 onChange={(e) => setComment(e.target.value)}\n// //                             />\n// //                             <button className=\"btn btn-primary\" onClick={handleComment}>Comment</button>\n// //                         </div>\n// //                     </div>\n// //                 )}\n// //             </div>\n// //         </div>\n// //     );\n// // };\n\n// // export default Post;\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import '../style.css'; // Import custom CSS styles\n// import avatar from '../assets/user-circle.svg';\n// import like from '../assets/like.png';\n// import commentbtn from '../assets/chat.png';\n\n// const Post = ({ post, fetchPosts }) => {\n//     const [comment, setComment] = useState(''); // State for comment input\n//     const [showComments, setShowComments] = useState(false); // State to toggle comment visibility\n\n//     const handleLike = async () => {\n//         try {\n//             await axios.post(`http://localhost:5000/api/posts/${post._id}/like`, {}, {\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 }\n//             });\n//             console.log('Post liked');\n//          // Refresh the post list after liking\n//         } catch (error) {\n//             console.error('Error liking post:', error);\n//         }\n//     };\n\n//     const handleComment = async (e) => {\n//         e.preventDefault(); // Prevent form submission\n//         if (!comment.trim()) return; // Prevent submitting empty comments\n//         try {\n//             await axios.post(`http://localhost:5000/api/posts/${post._id}/comment`, { content: comment }, {\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                 }\n//             });\n//             console.log('Comment added');\n//            // Refresh the post list after adding a comment\n//             setComment(''); // Clear the comment input after submission\n//         } catch (error) {\n//             console.error('Error adding comment:', error);\n//         }\n//     };\n\n//     // Function to format timestamp\n//     const formatTimestamp = (timestamp) => {\n//         const date = new Date(timestamp);\n//         return date.toLocaleString(); // Formats date and time\n//     };\n\n//     return (\n//         <div className=\"card mb-3 shadow-none border\">\n//             <div className=\"card-body border-bottom\">\n//                 {/* Post Header with Avatar, Dynamic User Name, and Time */}\n//                 <div className=\"d-flex align-items-center gap-3\">\n//                     <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"40\" height=\"40\" />\n//                     {/* Display the post author's name dynamically */}\n//                     <h6 className=\"fw-semibold mb-0 fs-4\">{post.user.username}</h6> \n//                 </div>\n\n//                 {/* Post Content */}\n//                 <p className=\"text-dark my-3\">{post.content}</p>\n//                 {post.image && (\n//                     <img src={post.image} alt=\"Post\" className=\"img-fluid rounded-4 w-100 object-fit-cover\" style={{ height: '360px' }} />\n//                 )}\n\n//                 {/* Post Actions (Like, Comment, Share) */}\n//                 <div className=\"d-flex align-items-center my-3\">\n//                     <div className=\"d-flex align-items-center gap-2\">\n//                         <a className=\"like-btn text-white d-flex align-items-center justify-content-center bg-primary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={handleLike}>\n//                             <i className=\"fa fa-thumbs-up\">\n//                                 <img src={like} alt=\"like\" className=\"img-fluid icon-small\" />\n//                             </i>\n//                         </a>\n//                         <span className=\"text-dark fw-semibold\">{post.likes.length}</span>\n//                     </div>\n//                     <div className=\"d-flex align-items-center gap-2 ms-4\">\n//                         <a className=\"comment-btn text-white d-flex align-items-center justify-content-center bg-secondary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={() => setShowComments(!showComments)}>\n//                             <i className=\"fa fa-comments\">\n//                                 <img src={commentbtn} alt=\"comment\" className=\"img-fluid icon-small\" />\n//                             </i>\n//                         </a>\n//                         <span className=\"text-dark fw-semibold\">{post.comments.length}</span>\n//                     </div>\n//                 </div>\n\n//                 {/* Comments Section: Toggle Visibility Based on `showComments` */}\n//                 {showComments && (\n//                     <div className=\"position-relative\">\n//                         {post.comments.map((comment) => (\n//                             <div key={comment._id} className=\"p-4 rounded-2 bg-light mb-3\">\n//                                 <div className=\"d-flex align-items-center gap-3\">\n//                                     <img src={avatar} alt=\"comment avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\n//                                     {/* Display the comment author dynamically */}\n//                                     <h6 className=\"fw-semibold mb-0 fs-4\">{comment.user.username}</h6>\n//                                     <span className=\"ms-auto text-muted small\">{formatTimestamp(comment.createdAt)}</span> {/* Add timestamp */}\n//                                 </div>\n//                                 {/* Display the comment content */}\n//                                 <p className=\"my-3\">{comment.content}</p>\n//                             </div>\n//                         ))}\n\n//                         {/* Comment Input */}\n//                         <div className=\"d-flex align-items-center gap-3 p-3\">\n//                             <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\n//                             <input\n//                                 type=\"text\"\n//                                 className=\"form-control py-2\"\n//                                 placeholder=\"Comment\"\n//                                 value={comment}\n//                                 onChange={(e) => setComment(e.target.value)}\n//                             />\n//                             <button className=\"btn btn-primary\" onClick={handleComment}>Comment</button>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Post;","map":{"version":3,"names":[],"sources":["C:/Users/Elgohry Store/social-media-app/frontend/src/components/Post.js"],"sourcesContent":["\r\n// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import '../style.css'; // Import custom CSS styles\r\n// // import avatar from '../assets/user-circle.svg';\r\n// // import like from '../assets/like.png';\r\n// // import commentbtn from '../assets/chat.png';\r\n\r\n// // const Post = ({ post, fetchPosts }) => {\r\n// //     const [comment, setComment] = useState(''); // State for comment input\r\n// //     const [showComments, setShowComments] = useState(false); // State to toggle comment visibility\r\n\r\n// //     const handleLike = async () => {\r\n// //         try {\r\n// //             await axios.post(`http://localhost:5000/api/posts/${post._id}/like`, {}, {\r\n// //                 headers: {\r\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n// //                 }\r\n// //             });\r\n// //             console.log('Post liked');\r\n// //          // Refresh the post list after liking\r\n// //         } catch (error) {\r\n// //             console.error('Error liking post:', error);\r\n// //         }\r\n// //     };\r\n\r\n// //     const handleComment = async (e) => {\r\n// //         e.preventDefault(); // Prevent form submission\r\n// //         if (!comment.trim()) return; // Prevent submitting empty comments\r\n// //         try {\r\n// //             await axios.post(`http://localhost:5000/api/posts/${post._id}/comment`, { content: comment }, {\r\n// //                 headers: {\r\n// //                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n// //                 }\r\n// //             });\r\n// //             console.log('Comment added');\r\n// //            // Refresh the post list after adding a comment\r\n// //             setComment(''); // Clear the comment input after submission\r\n// //         } catch (error) {\r\n// //             console.error('Error adding comment:', error);\r\n// //         }\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className=\"card mb-3 shadow-none border\">\r\n// //             <div className=\"card-body border-bottom\">\r\n// //                 {/* Post Header with Avatar, Dynamic User Name, and Time */}\r\n// //                 <div className=\"d-flex align-items-center gap-3\">\r\n// //                     <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"40\" height=\"40\" />\r\n// //                     {/* Display the post author's name dynamically */}\r\n// //                     <h6 className=\"fw-semibold mb-0 fs-4\">{post.user.username}</h6> \r\n// //                 </div>\r\n\r\n// //                 {/* Post Content */}\r\n// //                 <p className=\"text-dark my-3\">{post.content}</p>\r\n// //                 {post.image && (\r\n// //                     <img src={post.image} alt=\"Post\" className=\"img-fluid rounded-4 w-100 object-fit-cover\" style={{ height: '360px' }} />\r\n// //                 )}\r\n\r\n// //                 {/* Post Actions (Like, Comment, Share) */}\r\n// //                 <div className=\"d-flex align-items-center my-3\">\r\n// //                     <div className=\"d-flex align-items-center gap-2\">\r\n// //                         <a className=\"like-btn text-white d-flex align-items-center justify-content-center bg-primary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={handleLike}>\r\n// //                             <i className=\"fa fa-thumbs-up\">\r\n// //                                 <img src={like} alt=\"like\" className=\"img-fluid icon-small\" />\r\n// //                             </i>\r\n// //                         </a>\r\n// //                         <span className=\"text-dark fw-semibold\">{post.likes.length}</span>\r\n// //                     </div>\r\n// //                     <div className=\"d-flex align-items-center gap-2 ms-4\">\r\n// //                         <a className=\"comment-btn text-white d-flex align-items-center justify-content-center bg-secondary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={() => setShowComments(!showComments)}>\r\n// //                             <i className=\"fa fa-comments\">\r\n// //                                 <img src={commentbtn} alt=\"comment\" className=\"img-fluid icon-small\" />\r\n// //                             </i>\r\n// //                         </a>\r\n// //                         <span className=\"text-dark fw-semibold\">{post.comments.length}</span>\r\n// //                     </div>\r\n// //                 </div>\r\n\r\n// //                 {/* Comments Section: Toggle Visibility Based on `showComments` */}\r\n// //                 {showComments && (\r\n// //                     <div className=\"position-relative\">\r\n// //                         {post.comments.map((comment) => (\r\n// //                             <div key={comment._id} className=\"p-4 rounded-2 bg-light mb-3\">\r\n// //                                 <div className=\"d-flex align-items-center gap-3\">\r\n// //                                     <img src={avatar} alt=\"comment avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\r\n// //                                     {/* Display the comment author dynamically */}\r\n// //                                     <h6 className=\"fw-semibold mb-0 fs-4\">{comment.user.username}</h6>\r\n// //                                 </div>\r\n// //                                 {/* Display the comment content */}\r\n// //                                 <p className=\"my-3\">{comment.content}</p>\r\n// //                             </div>\r\n// //                         ))}\r\n\r\n// //                         {/* Comment Input */}\r\n// //                         <div className=\"d-flex align-items-center gap-3 p-3\">\r\n// //                             <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\r\n// //                             <input\r\n// //                                 type=\"text\"\r\n// //                                 className=\"form-control py-2\"\r\n// //                                 placeholder=\"Comment\"\r\n// //                                 value={comment}\r\n// //                                 onChange={(e) => setComment(e.target.value)}\r\n// //                             />\r\n// //                             <button className=\"btn btn-primary\" onClick={handleComment}>Comment</button>\r\n// //                         </div>\r\n// //                     </div>\r\n// //                 )}\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default Post;\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import '../style.css'; // Import custom CSS styles\r\n// import avatar from '../assets/user-circle.svg';\r\n// import like from '../assets/like.png';\r\n// import commentbtn from '../assets/chat.png';\r\n\r\n// const Post = ({ post, fetchPosts }) => {\r\n//     const [comment, setComment] = useState(''); // State for comment input\r\n//     const [showComments, setShowComments] = useState(false); // State to toggle comment visibility\r\n\r\n//     const handleLike = async () => {\r\n//         try {\r\n//             await axios.post(`http://localhost:5000/api/posts/${post._id}/like`, {}, {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 }\r\n//             });\r\n//             console.log('Post liked');\r\n//          // Refresh the post list after liking\r\n//         } catch (error) {\r\n//             console.error('Error liking post:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleComment = async (e) => {\r\n//         e.preventDefault(); // Prevent form submission\r\n//         if (!comment.trim()) return; // Prevent submitting empty comments\r\n//         try {\r\n//             await axios.post(`http://localhost:5000/api/posts/${post._id}/comment`, { content: comment }, {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//                 }\r\n//             });\r\n//             console.log('Comment added');\r\n//            // Refresh the post list after adding a comment\r\n//             setComment(''); // Clear the comment input after submission\r\n//         } catch (error) {\r\n//             console.error('Error adding comment:', error);\r\n//         }\r\n//     };\r\n\r\n//     // Function to format timestamp\r\n//     const formatTimestamp = (timestamp) => {\r\n//         const date = new Date(timestamp);\r\n//         return date.toLocaleString(); // Formats date and time\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"card mb-3 shadow-none border\">\r\n//             <div className=\"card-body border-bottom\">\r\n//                 {/* Post Header with Avatar, Dynamic User Name, and Time */}\r\n//                 <div className=\"d-flex align-items-center gap-3\">\r\n//                     <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"40\" height=\"40\" />\r\n//                     {/* Display the post author's name dynamically */}\r\n//                     <h6 className=\"fw-semibold mb-0 fs-4\">{post.user.username}</h6> \r\n//                 </div>\r\n\r\n//                 {/* Post Content */}\r\n//                 <p className=\"text-dark my-3\">{post.content}</p>\r\n//                 {post.image && (\r\n//                     <img src={post.image} alt=\"Post\" className=\"img-fluid rounded-4 w-100 object-fit-cover\" style={{ height: '360px' }} />\r\n//                 )}\r\n\r\n//                 {/* Post Actions (Like, Comment, Share) */}\r\n//                 <div className=\"d-flex align-items-center my-3\">\r\n//                     <div className=\"d-flex align-items-center gap-2\">\r\n//                         <a className=\"like-btn text-white d-flex align-items-center justify-content-center bg-primary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={handleLike}>\r\n//                             <i className=\"fa fa-thumbs-up\">\r\n//                                 <img src={like} alt=\"like\" className=\"img-fluid icon-small\" />\r\n//                             </i>\r\n//                         </a>\r\n//                         <span className=\"text-dark fw-semibold\">{post.likes.length}</span>\r\n//                     </div>\r\n//                     <div className=\"d-flex align-items-center gap-2 ms-4\">\r\n//                         <a className=\"comment-btn text-white d-flex align-items-center justify-content-center bg-secondary p-1 fs-5 rounded-circle\" href=\"#!\" onClick={() => setShowComments(!showComments)}>\r\n//                             <i className=\"fa fa-comments\">\r\n//                                 <img src={commentbtn} alt=\"comment\" className=\"img-fluid icon-small\" />\r\n//                             </i>\r\n//                         </a>\r\n//                         <span className=\"text-dark fw-semibold\">{post.comments.length}</span>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 {/* Comments Section: Toggle Visibility Based on `showComments` */}\r\n//                 {showComments && (\r\n//                     <div className=\"position-relative\">\r\n//                         {post.comments.map((comment) => (\r\n//                             <div key={comment._id} className=\"p-4 rounded-2 bg-light mb-3\">\r\n//                                 <div className=\"d-flex align-items-center gap-3\">\r\n//                                     <img src={avatar} alt=\"comment avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\r\n//                                     {/* Display the comment author dynamically */}\r\n//                                     <h6 className=\"fw-semibold mb-0 fs-4\">{comment.user.username}</h6>\r\n//                                     <span className=\"ms-auto text-muted small\">{formatTimestamp(comment.createdAt)}</span> {/* Add timestamp */}\r\n//                                 </div>\r\n//                                 {/* Display the comment content */}\r\n//                                 <p className=\"my-3\">{comment.content}</p>\r\n//                             </div>\r\n//                         ))}\r\n\r\n//                         {/* Comment Input */}\r\n//                         <div className=\"d-flex align-items-center gap-3 p-3\">\r\n//                             <img src={avatar} alt=\"avatar\" className=\"rounded-circle\" width=\"33\" height=\"33\" />\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 className=\"form-control py-2\"\r\n//                                 placeholder=\"Comment\"\r\n//                                 value={comment}\r\n//                                 onChange={(e) => setComment(e.target.value)}\r\n//                             />\r\n//                             <button className=\"btn btn-primary\" onClick={handleComment}>Comment</button>\r\n//                         </div>\r\n//                     </div>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Post;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}