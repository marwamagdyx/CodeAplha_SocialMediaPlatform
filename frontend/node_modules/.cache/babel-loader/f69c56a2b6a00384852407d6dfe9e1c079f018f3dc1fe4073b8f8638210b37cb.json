{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgohry Store\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\n// src/components/PostList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('/api/posts'); // Create a route to get posts\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const handleComment = async postId => {\n    try {\n      const response = await axios.post(`/api/posts/comment/${postId}`, {\n        content: commentContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Comment added:', response.data);\n      fetchPosts(); // Refresh the posts after commenting\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      const response = await axios.put(`/api/posts/like/${postId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Post liked:', response.data);\n      fetchPosts(); // Refresh the posts after liking\n    } catch (error) {\n      console.error('Error liking post:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(post._id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: commentContent,\n          onChange: e => setCommentContent(e.target.value),\n          placeholder: \"Add a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleComment(post._id),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"OF6DgnH19xixOkIWrpCw4UcnN9Q=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","commentContent","setCommentContent","fetchPosts","response","get","data","error","console","handleComment","postId","post","content","headers","localStorage","getItem","log","handleLike","put","children","map","user","name","fileName","_jsxFileName","lineNumber","columnNumber","image","src","alt","onClick","_id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Elgohry Store/social-media-app/frontend/src/components/PostList.js"],"sourcesContent":["// src/components/PostList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PostList = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [commentContent, setCommentContent] = useState('');\r\n\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await axios.get('/api/posts'); // Create a route to get posts\r\n            setPosts(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching posts:', error);\r\n        }\r\n    };\r\n    \r\n\r\nconst handleComment = async (postId) => {\r\n    try {\r\n        const response = await axios.post(`/api/posts/comment/${postId}`, { content: commentContent }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n        console.log('Comment added:', response.data);\r\n        fetchPosts(); // Refresh the posts after commenting\r\n    } catch (error) {\r\n        console.error('Error adding comment:', error);\r\n    }\r\n};\r\n    const handleLike = async (postId) => {\r\n        try {\r\n            const response = await axios.put(`/api/posts/like/${postId}`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            console.log('Post liked:', response.data);\r\n            fetchPosts(); // Refresh the posts after liking\r\n        } catch (error) {\r\n            console.error('Error liking post:', error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {posts.map(post => (\r\n                <div key={post._id}>\r\n                    <h4>{post.user.name}</h4>\r\n                    <p>{post.content}</p>\r\n                    {post.image && <img src={post.image} alt=\"Post\" />}\r\n                    <div>\r\n                        <button onClick={() => handleLike(post._id)}>Like</button>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={commentContent}\r\n                            onChange={(e) => setCommentContent(e.target.value)}\r\n                            placeholder=\"Add a comment\"\r\n                        />\r\n                        <button onClick={() => handleComment(post._id)}>Comment</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}